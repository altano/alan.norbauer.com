---
import { Icon } from "astro-icon/components";
---

<style>
  @layer components {
    button {
      position: fixed;
      right: 10px;
      bottom: 10px;
      cursor: pointer;
      border-radius: var(--border-radius-sm);
      padding: 5px;
      background: var(--bg-card);

      /**
       * Without this media query the button gets stuck after you tap it on 
       * touch devices that don't support true hover. So don't have this affect
       * there.
       */
      @media (hover: hover) {
        &:hover {
          background: var(--bg-selection);
          color: var(--text-selection);
          transition: background var(--durations-color-scheme);
        }
      }
    }

    html[data-theme="light"] .dark {
      display: none;
    }

    html[data-theme="dark"] .light {
      display: none;
    }
  }
</style>

<script>
  import { toggleTheme, updateTheme } from "@/scripts/theme.js";
  import type { Theme } from "astro-themes";

  function getButtonLabel(preference: Theme | null): string {
    switch (preference) {
      case null:
        return "automatic/system";
      case "dark":
      case "light":
        return preference;
      default:
        preference satisfies never; // Ensure exhaustive check
        throw new Error(`Unexpected theme preference: ${preference}`);
    }
  }

  // If the system color scheme changes (while this page is loaded), switch
  // back to the system color scheme (i.e. unset the current theme preference
  // and remove it from local storage).
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", () => {
      updateTheme("system");
    });

  // react to user selecting different theme option
  const element = document.getElementById("theme-switcher");
  if (element == null || !(element instanceof HTMLButtonElement)) {
    throw new Error("Theme switcher button not found");
  }
  const button: HTMLButtonElement = element;
  button.addEventListener("click", toggleTheme);
  // react to the theme changing
  document.addEventListener("set-theme", ({ detail }) => {
    button.setAttribute("aria-label", getButtonLabel(detail));
  });
</script>

{
  /**
   * Follows aria-label guidance at
   * https://web.dev/articles/building/a-theme-switch-component#the_button
   */
}
<button
  id="theme-switcher"
  data-testid="theme-switcher"
  title="Toggles light/dark theme"
  aria-label="automatic/system"
  aria-live="polite"
>
  <Icon
    class="light"
    name="heroicons:sun-solid"
    size={16}
    aria-labelledby="theme-switcher"
  />
  <Icon
    class="dark"
    name="heroicons:moon-solid"
    size={16}
    aria-labelledby="theme-switcher"
  />
</button>
