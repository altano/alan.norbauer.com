---
import VisibleElementObserver from "./VisibleElementObserver.astro";
---

<script>
  document.documentElement.addEventListener(
    "visible-element-change",
    (evt: CustomEventInit<{ item: Element; isIntersecting: boolean }>) => {
      const section = evt.detail?.item;
      if (section == null) {
        console.error(`visible-element-change event should have a section`);
        return;
      }
      const isAdding = evt.detail?.isIntersecting === true;
      // only a section's first, direct-descendant heading is relevant
      const heading = section.querySelector("& > :is(h1, h2, h3, h4, h5, h6)");
      if (heading == null) {
        return;
      }
      const id = heading.getAttribute("id");
      const listItem = document.querySelector(
        `.table-of-contents li:has(> a[href="#${id}"]`
      );
      if (listItem == null) {
        // section visibility changed but with no matching link for id
        // we don't error here because this is valid: the table of contents
        // might have a maximum depth and not render links for all headings.
        return;
      }

      if (isAdding) {
        listItem.setAttribute("aria-current", "true");
      } else {
        listItem.removeAttribute("aria-current");
      }
    }
  );
</script>

<VisibleElementObserver selector="article section">
  <slot />
</VisibleElementObserver>
